- The engineer though: Square is a rectangle with all sides equal
- This is good for a square class
- But in a polymorphism setup, a square object is sent to a rectangle object
- Then this rectangle can do change for width/height
- We then end up with a corrupted square status!

- Tip: Make sure your sub-class is really a valid superclass. This is related to the Liskov Substitution Principle

- The right way is a composition
- Square class has an instance of type Rectangle
- Delegate all calls to a rectangle
- Now we are safe, without the need for inheritance between rectangle and square